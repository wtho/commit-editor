name: deploy
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: restore cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: deps and run tests
        run: |
          lerna bootstrap
          cd commit-editor-app
          npm test -- --collectCoverage

      - name: prepare coverage report
        run: |
          mkdir coverage
          cat commit-editor-app/coverage/lcov.info | sed 's/^SF:/SF:commit-editor-app\//g' > coverage/lcov.info

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build-cli:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: restore cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: install and build
        run: |
          lerna bootstrap
          npm run build

      - name: archive cli-app
        uses: actions/upload-artifact@v2
        with:
          name: cli-build
          path: cli-build

  build-webapp:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: restore cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: install and build
        run: |
          lerna bootstrap
          cd commit-editor-app
          npm run build

      - name: archive web-app
        uses: actions/upload-artifact@v2
        with:
          name: web-app-dist
          path: web-app-dist


  e2e:
    runs-on: ubuntu-latest
    needs:
      - build-webapp
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: restore cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: install
        run: |
          lerna bootstrap

      - name: download web app
        uses: actions/download-artifact@v2
        with:
          name: web-app-dist
          path: web-app-dist

      - name: run cypress e2e tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: ./e2e
          start: npm run serve-web-app
          wait-on: 'http://localhost:5000'
          browser: chrome
          headless: true


  deploy:
    runs-on: ubuntu-latest
    environment: netlify
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - build-webapp
      - unit-test
      - e2e
    steps:
      - name: download web app
        uses: actions/download-artifact@v2
        with:
          name: web-app-dist
          path: web-app-dist

      - name: deploy to netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: npx netlify deploy --dir=web-app-dist --prod


  release:
    runs-on: ubuntu-latest
    needs:
      - build-cli
      - build-webapp
      - deploy
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: download cli app
        uses: actions/download-artifact@v2
        with:
          name: cli-build

      - name: download web app
        uses: actions/download-artifact@v2
        with:
          name: web-app-dist
          path: web-app-dist
        
      - name: install semantic-release package
        run: npm i @semantic-release/changelog @semantic-release/git --no-save

      - name: release
        uses: codfish/semantic-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

